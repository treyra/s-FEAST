#Example showing our binary fault model under an averse fault like the simulations shown in our paper.
#Initiate experiment by running "python pipeline.py ./config/binaryFaultModelExample.yaml" in the failurePy directory
nSimulationsPerTree: #This is a list of simulation levels to run
  - 200

nTrialsPerPoint: 1 #How many times to repeat each experiment configuration

dim: 3
linear: False
spacecraftMass: 1
spacecraftMoment: 4
sigmaW:
  - 0.2
  - 0.2
  - 0.01
sigmaV: .4
discretization: .125
dt: 1

numWheels: 2
providedFailure: #1 indicates nominal, 0 indicates failure
  - 1
  - 1
  - 1
  - 1
  - 1
  - 1
  - 0
  - 0
  - 1
  - 1
  - 1
  - 1
  - 1
  - 1
  - 1
  - 1

maxNumActions: 20
rngKeysOffset: 0
actionRNGSeed: 0 # Actions are selected randomly, but same for every trial

#Not letting simulation break early to enforce safety over full experiment
diagnosisThreshold: 1.1
nMaxComponentFailures: 3

initialState:
  - 0
  - 0
  - 0 #Giving 10 time steps until collision
  - -1
  - 0
  - 0
  - 0
  - 0

nExperimentSteps: 15 #Didn't see any noticeable changes with more time steps, so less to run faster

solverFList:
  - sFEAST
  #- cbf #Baseline methods, to use, note "nSimulationsPerTree" must be 1
  #- greedy
  #- scp

estimator: marginalizedFilter
physicalStateSubEstimator: ekf #Required sub filter if using marginal filter
reward: squareSumFailureBeliefReward

safetyMethod: safetyConstrainedReward
safetyFunctionEvaluation: chebyshev
allowableFailureChance: .10
safetyFunction: worstCase
safetyConstraints: #Should be nested list, constraint, and parameters
  - - circularObstacleConstraint
    - - 10 #Radius (Currently obstacle + s/c radius)
      - - 0 #center x
        - -20 #center y
  #- - circularSafeZoneConstraint
  #  - - 30 #Radius (Currently safe zone - s/c radius)
  #    - - 0 #center x
  #      - 0 #center y
  #Square constraint, normal matrix, offset
  - - linearSafeZoneConstraint #Of form Ax - b < 0, need all to be satisfied. Here is is a 60x60 rect around origin
    - - - - 1 #First row of A matrix, should be external normals
          - 0
        - - -1 #next row of A matrix
          - 0
        - - 0
          - 1
        - - 0
          - -1
      - - 25 #First offset
        - 25
        - 25
        - 25

saveDirectoryPath: binaryExample
clobber: True #Overwrites data when true!

nMaxPossibleFailures: 40

#Plotting config
plottingExtent: 30
resolution: 100

generalFaultFlag: False

particleResampleType: gaussian
particleResampleCheck: never
particleInitializationFunction: biasedRandomRedundant #Biased to 1/2 chance to be nominal, biases repeated x5

saveTreeFlag: True #Visualizes the tree search, but this must be disabled when running more than one trial, as it produces a lot of data

multiprocessingFlag: False #To enable multiprocessing (useful when running any trials per point), type a number to represent how many CPU cores should NOT be used by failurePy. Note this can have undefined behavior if more cores are provided than trials are run
discountFactor: 1
